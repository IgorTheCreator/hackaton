services:
  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    volumes:
      - minio-data:/data
    ports:
      - ${MINIO_API}:9000
      - ${MINIO_WEB}:9001
    restart: unless-stopped
    networks:
      - app_network
  redis_queue:
    image: redis:latest
    container_name: redis_queue
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD --maxmemory 100mb --maxmemory-policy volatile-lru"
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis-data:/data
    networks:
      - app_network

  test_db:
    image: postgres:latest
    container_name: test_db
    restart: unless-stopped
    ports:
      - ${DATABASE_PORT}:5432
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
    volumes:
      - data_db:/var/lib/postgresql/data
    networks:
      - app_network

  server:
    build: .
    container_name: server
    restart: always
    networks:
      - app_network

    ports:
      - ${APP_PORT}:3000
    environment:
      - APP_PORT=${APP_PORT}
      - APP_HOST=${APP_HOST}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_TOKEN_VALID=${JWT_TOKEN_VALID}
      - REFRESH_TOKEN_VALID_DAYS=${REFRESH_TOKEN_VALID_DAYS}

    depends_on:
      - test_db
      - redis_queue

    volumes:
      - server:/data/app

volumes:
  data_db:
  server:
  redis-data:
    name: redis-data
  minio-data:

networks:
  app_network:
  redis-network:
    driver: bridge